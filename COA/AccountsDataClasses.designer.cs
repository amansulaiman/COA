#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace COA
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="AccountsDB")]
	public partial class AccountsDataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBalance_Sheet(Balance_Sheet instance);
    partial void UpdateBalance_Sheet(Balance_Sheet instance);
    partial void DeleteBalance_Sheet(Balance_Sheet instance);
    partial void InsertCash_Account(Cash_Account instance);
    partial void UpdateCash_Account(Cash_Account instance);
    partial void DeleteCash_Account(Cash_Account instance);
    partial void InsertExpenditure(Expenditure instance);
    partial void UpdateExpenditure(Expenditure instance);
    partial void DeleteExpenditure(Expenditure instance);
    partial void InsertTransaction(Transaction instance);
    partial void UpdateTransaction(Transaction instance);
    partial void DeleteTransaction(Transaction instance);
    #endregion
		
		public AccountsDataClassesDataContext() : 
				base(global::COA.Properties.Settings.Default.AccountsDBConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public AccountsDataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AccountsDataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AccountsDataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AccountsDataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Balance_Sheet> Balance_Sheets
		{
			get
			{
				return this.GetTable<Balance_Sheet>();
			}
		}
		
		public System.Data.Linq.Table<Bank_Account> Bank_Accounts
		{
			get
			{
				return this.GetTable<Bank_Account>();
			}
		}
		
		public System.Data.Linq.Table<Cash_Account> Cash_Accounts
		{
			get
			{
				return this.GetTable<Cash_Account>();
			}
		}
		
		public System.Data.Linq.Table<Expenditure> Expenditures
		{
			get
			{
				return this.GetTable<Expenditure>();
			}
		}
		
		public System.Data.Linq.Table<Transaction> Transactions
		{
			get
			{
				return this.GetTable<Transaction>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Balance_Sheet")]
	public partial class Balance_Sheet : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SN;
		
		private System.Nullable<decimal> _Capital;
		
		private System.Nullable<decimal> _Net_Profit;
		
		private System.Nullable<decimal> _Current_Liability;
		
		private System.Nullable<decimal> _Creditors;
		
		private System.Nullable<decimal> _Fixed_Asset;
		
		private System.Nullable<decimal> _Stock;
		
		private System.Nullable<decimal> _Bank;
		
		private System.Nullable<decimal> _Cash;
		
		private System.Nullable<decimal> _Debitors;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSNChanging(int value);
    partial void OnSNChanged();
    partial void OnCapitalChanging(System.Nullable<decimal> value);
    partial void OnCapitalChanged();
    partial void OnNet_ProfitChanging(System.Nullable<decimal> value);
    partial void OnNet_ProfitChanged();
    partial void OnCurrent_LiabilityChanging(System.Nullable<decimal> value);
    partial void OnCurrent_LiabilityChanged();
    partial void OnCreditorsChanging(System.Nullable<decimal> value);
    partial void OnCreditorsChanged();
    partial void OnFixed_AssetChanging(System.Nullable<decimal> value);
    partial void OnFixed_AssetChanged();
    partial void OnStockChanging(System.Nullable<decimal> value);
    partial void OnStockChanged();
    partial void OnBankChanging(System.Nullable<decimal> value);
    partial void OnBankChanged();
    partial void OnCashChanging(System.Nullable<decimal> value);
    partial void OnCashChanged();
    partial void OnDebitorsChanging(System.Nullable<decimal> value);
    partial void OnDebitorsChanged();
    #endregion
		
		public Balance_Sheet()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SN", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SN
		{
			get
			{
				return this._SN;
			}
			set
			{
				if ((this._SN != value))
				{
					this.OnSNChanging(value);
					this.SendPropertyChanging();
					this._SN = value;
					this.SendPropertyChanged("SN");
					this.OnSNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Capital", DbType="Money")]
		public System.Nullable<decimal> Capital
		{
			get
			{
				return this._Capital;
			}
			set
			{
				if ((this._Capital != value))
				{
					this.OnCapitalChanging(value);
					this.SendPropertyChanging();
					this._Capital = value;
					this.SendPropertyChanged("Capital");
					this.OnCapitalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Net_Profit", DbType="Money")]
		public System.Nullable<decimal> Net_Profit
		{
			get
			{
				return this._Net_Profit;
			}
			set
			{
				if ((this._Net_Profit != value))
				{
					this.OnNet_ProfitChanging(value);
					this.SendPropertyChanging();
					this._Net_Profit = value;
					this.SendPropertyChanged("Net_Profit");
					this.OnNet_ProfitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Current_Liability", DbType="Money")]
		public System.Nullable<decimal> Current_Liability
		{
			get
			{
				return this._Current_Liability;
			}
			set
			{
				if ((this._Current_Liability != value))
				{
					this.OnCurrent_LiabilityChanging(value);
					this.SendPropertyChanging();
					this._Current_Liability = value;
					this.SendPropertyChanged("Current_Liability");
					this.OnCurrent_LiabilityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Creditors", DbType="Money")]
		public System.Nullable<decimal> Creditors
		{
			get
			{
				return this._Creditors;
			}
			set
			{
				if ((this._Creditors != value))
				{
					this.OnCreditorsChanging(value);
					this.SendPropertyChanging();
					this._Creditors = value;
					this.SendPropertyChanged("Creditors");
					this.OnCreditorsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fixed_Asset", DbType="Money")]
		public System.Nullable<decimal> Fixed_Asset
		{
			get
			{
				return this._Fixed_Asset;
			}
			set
			{
				if ((this._Fixed_Asset != value))
				{
					this.OnFixed_AssetChanging(value);
					this.SendPropertyChanging();
					this._Fixed_Asset = value;
					this.SendPropertyChanged("Fixed_Asset");
					this.OnFixed_AssetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stock", DbType="Money")]
		public System.Nullable<decimal> Stock
		{
			get
			{
				return this._Stock;
			}
			set
			{
				if ((this._Stock != value))
				{
					this.OnStockChanging(value);
					this.SendPropertyChanging();
					this._Stock = value;
					this.SendPropertyChanged("Stock");
					this.OnStockChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bank", DbType="Money")]
		public System.Nullable<decimal> Bank
		{
			get
			{
				return this._Bank;
			}
			set
			{
				if ((this._Bank != value))
				{
					this.OnBankChanging(value);
					this.SendPropertyChanging();
					this._Bank = value;
					this.SendPropertyChanged("Bank");
					this.OnBankChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cash", DbType="Money")]
		public System.Nullable<decimal> Cash
		{
			get
			{
				return this._Cash;
			}
			set
			{
				if ((this._Cash != value))
				{
					this.OnCashChanging(value);
					this.SendPropertyChanging();
					this._Cash = value;
					this.SendPropertyChanged("Cash");
					this.OnCashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Debitors", DbType="Money")]
		public System.Nullable<decimal> Debitors
		{
			get
			{
				return this._Debitors;
			}
			set
			{
				if ((this._Debitors != value))
				{
					this.OnDebitorsChanging(value);
					this.SendPropertyChanging();
					this._Debitors = value;
					this.SendPropertyChanged("Debitors");
					this.OnDebitorsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Bank.Account]")]
	public partial class Bank_Account
	{
		
		private string _Account_Name;
		
		private System.Nullable<decimal> _Cash_Avail;
		
		public Bank_Account()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Account_Name", DbType="NVarChar(50)")]
		public string Account_Name
		{
			get
			{
				return this._Account_Name;
			}
			set
			{
				if ((this._Account_Name != value))
				{
					this._Account_Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cash_Avail", DbType="Money")]
		public System.Nullable<decimal> Cash_Avail
		{
			get
			{
				return this._Cash_Avail;
			}
			set
			{
				if ((this._Cash_Avail != value))
				{
					this._Cash_Avail = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Cash.Account]")]
	public partial class Cash_Account : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Account_Name;
		
		private System.Nullable<decimal> _Cash_Avail;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAccount_NameChanging(string value);
    partial void OnAccount_NameChanged();
    partial void OnCash_AvailChanging(System.Nullable<decimal> value);
    partial void OnCash_AvailChanged();
    #endregion
		
		public Cash_Account()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Account_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Account_Name
		{
			get
			{
				return this._Account_Name;
			}
			set
			{
				if ((this._Account_Name != value))
				{
					this.OnAccount_NameChanging(value);
					this.SendPropertyChanging();
					this._Account_Name = value;
					this.SendPropertyChanged("Account_Name");
					this.OnAccount_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cash_Avail", DbType="Money")]
		public System.Nullable<decimal> Cash_Avail
		{
			get
			{
				return this._Cash_Avail;
			}
			set
			{
				if ((this._Cash_Avail != value))
				{
					this.OnCash_AvailChanging(value);
					this.SendPropertyChanging();
					this._Cash_Avail = value;
					this.SendPropertyChanged("Cash_Avail");
					this.OnCash_AvailChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Expenditures")]
	public partial class Expenditure : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TranID;
		
		private System.Nullable<System.DateTime> _Date_Time;
		
		private string _Receiver;
		
		private System.Nullable<decimal> _Amount;
		
		private System.Nullable<decimal> _Purpose;
		
		private System.Nullable<decimal> _Balance;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTranIDChanging(int value);
    partial void OnTranIDChanged();
    partial void OnDate_TimeChanging(System.Nullable<System.DateTime> value);
    partial void OnDate_TimeChanged();
    partial void OnReceiverChanging(string value);
    partial void OnReceiverChanged();
    partial void OnAmountChanging(System.Nullable<decimal> value);
    partial void OnAmountChanged();
    partial void OnPurposeChanging(System.Nullable<decimal> value);
    partial void OnPurposeChanged();
    partial void OnBalanceChanging(System.Nullable<decimal> value);
    partial void OnBalanceChanged();
    #endregion
		
		public Expenditure()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TranID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TranID
		{
			get
			{
				return this._TranID;
			}
			set
			{
				if ((this._TranID != value))
				{
					this.OnTranIDChanging(value);
					this.SendPropertyChanging();
					this._TranID = value;
					this.SendPropertyChanged("TranID");
					this.OnTranIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date_Time", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date_Time
		{
			get
			{
				return this._Date_Time;
			}
			set
			{
				if ((this._Date_Time != value))
				{
					this.OnDate_TimeChanging(value);
					this.SendPropertyChanging();
					this._Date_Time = value;
					this.SendPropertyChanged("Date_Time");
					this.OnDate_TimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Receiver", DbType="NVarChar(50)")]
		public string Receiver
		{
			get
			{
				return this._Receiver;
			}
			set
			{
				if ((this._Receiver != value))
				{
					this.OnReceiverChanging(value);
					this.SendPropertyChanging();
					this._Receiver = value;
					this.SendPropertyChanged("Receiver");
					this.OnReceiverChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Money")]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Purpose", DbType="Money")]
		public System.Nullable<decimal> Purpose
		{
			get
			{
				return this._Purpose;
			}
			set
			{
				if ((this._Purpose != value))
				{
					this.OnPurposeChanging(value);
					this.SendPropertyChanging();
					this._Purpose = value;
					this.SendPropertyChanged("Purpose");
					this.OnPurposeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Balance", DbType="Money")]
		public System.Nullable<decimal> Balance
		{
			get
			{
				return this._Balance;
			}
			set
			{
				if ((this._Balance != value))
				{
					this.OnBalanceChanging(value);
					this.SendPropertyChanging();
					this._Balance = value;
					this.SendPropertyChanged("Balance");
					this.OnBalanceChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Transactions")]
	public partial class Transaction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TransactionID;
		
		private System.Nullable<System.DateTime> _Date_Time;
		
		private string _Bank;
		
		private string _Name;
		
		private System.Nullable<decimal> _Bill;
		
		private System.Nullable<decimal> _Paid;
		
		private System.Nullable<decimal> _Balance;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTransactionIDChanging(int value);
    partial void OnTransactionIDChanged();
    partial void OnDate_TimeChanging(System.Nullable<System.DateTime> value);
    partial void OnDate_TimeChanged();
    partial void OnBankChanging(string value);
    partial void OnBankChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnBillChanging(System.Nullable<decimal> value);
    partial void OnBillChanged();
    partial void OnPaidChanging(System.Nullable<decimal> value);
    partial void OnPaidChanged();
    partial void OnBalanceChanging(System.Nullable<decimal> value);
    partial void OnBalanceChanged();
    #endregion
		
		public Transaction()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TransactionID
		{
			get
			{
				return this._TransactionID;
			}
			set
			{
				if ((this._TransactionID != value))
				{
					this.OnTransactionIDChanging(value);
					this.SendPropertyChanging();
					this._TransactionID = value;
					this.SendPropertyChanged("TransactionID");
					this.OnTransactionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date_Time", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date_Time
		{
			get
			{
				return this._Date_Time;
			}
			set
			{
				if ((this._Date_Time != value))
				{
					this.OnDate_TimeChanging(value);
					this.SendPropertyChanging();
					this._Date_Time = value;
					this.SendPropertyChanged("Date_Time");
					this.OnDate_TimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bank", DbType="NVarChar(50)")]
		public string Bank
		{
			get
			{
				return this._Bank;
			}
			set
			{
				if ((this._Bank != value))
				{
					this.OnBankChanging(value);
					this.SendPropertyChanging();
					this._Bank = value;
					this.SendPropertyChanged("Bank");
					this.OnBankChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bill", DbType="Money")]
		public System.Nullable<decimal> Bill
		{
			get
			{
				return this._Bill;
			}
			set
			{
				if ((this._Bill != value))
				{
					this.OnBillChanging(value);
					this.SendPropertyChanging();
					this._Bill = value;
					this.SendPropertyChanged("Bill");
					this.OnBillChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Paid", DbType="Money")]
		public System.Nullable<decimal> Paid
		{
			get
			{
				return this._Paid;
			}
			set
			{
				if ((this._Paid != value))
				{
					this.OnPaidChanging(value);
					this.SendPropertyChanging();
					this._Paid = value;
					this.SendPropertyChanged("Paid");
					this.OnPaidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Balance", DbType="Money")]
		public System.Nullable<decimal> Balance
		{
			get
			{
				return this._Balance;
			}
			set
			{
				if ((this._Balance != value))
				{
					this.OnBalanceChanging(value);
					this.SendPropertyChanging();
					this._Balance = value;
					this.SendPropertyChanged("Balance");
					this.OnBalanceChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
